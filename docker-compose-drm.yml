version: "3"
services:
  ## CONTRACTS + GRAPH
  openq-json-rpc-node:
    image: openq/openq-json-rpc-node:latest
    container_name: ethnode
    hostname: ethnode
    ports:
      - "8545:8545"
  openq-contracts:
    container_name: openq-contracts
    depends_on:
      - openq-json-rpc-node
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-Contracts
    volumes:
      - /app/node_modules
      - ./OpenQ-Contracts:/app
  openq_subgraph_deployer:
    container_name: openq_subgraph_deployer
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
      - graph-node
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-Graph
    volumes:
      - /app/node_modules
      - ./OpenQ-Contracts/.env.contracts:/app/.env.contracts
  graph-node:
    container_name: graph_node
    image: graphprotocol/graph-node
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "mainnet:http://ethnode:8545"
      GRAPH_LOG: info
  ipfs:
    container_name: ipfs
    image: ipfs/go-ipfs:v0.31.0
    ports:
      - "5001:5001"
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
  openq-oracle:
    container_name: openq-oracle
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Oracle
    ports:
      - "8090:8090"
    env_file:
      - ./OpenQ-Contracts/.env
      - ./OpenQ-Oracle/.env
      - ./OpenQ-Contracts/.env.contracts
    volumes:
      - /app/node_modules
      - ./OpenQ-Oracle:/app
      - ./OpenQ-Contracts/artifacts:/app/artifacts
  openq-oz-claim-autotask:
    container_name: openq-oz-claim-autotask
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-OZ-Claim-Autotask
    env_file:
      - ./OpenQ-OZ-Claim-Autotask/.env
      - ./OpenQ-Contracts/.env.contracts
    ports:
      - "8070:8070"
    volumes:
      - /app/node_modules
      - ./OpenQ-OZ-Claim-Autotask:/app
  openq-user-registration:
    container_name: openq-user-registration
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-User-Registration
    env_file:
      - ./OpenQ-User-Registration/.env
      - ./OpenQ-Contracts/.env.contracts
    ports:
      - "8091:8091"
    volumes:
      - /app/node_modules
      - ./OpenQ-User-Registration:/app
  openq-coinapi:
    container_name: openq-coinapi
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-CoinAPI
    ports:
      - "8081:8081"
    volumes:
      - /app/node_modules
      - ./OpenQ-CoinAPI:/app
    env_file:
      - ./OpenQ-CoinAPI/.env
  openq-event-listener:
    container_name: openq-event-listener
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Event-Listener
    volumes:
      - /app/node_modules
      - ./OpenQ-Event-Listener:/app
    env_file:
      - ./OpenQ-Event-Listener/.env
      - ./OpenQ-Contracts/.env.contracts
  openq-bounty-actions-autotask:
    container_name: openq-bounty-actions-autotask
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
      - openq-api
      - mongo
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-Bounty-Actions-Autotask
    ports:
      - "8075:8075"
    volumes:
      - /app/node_modules
      - ./OpenQ-Bounty-Actions-Autotask:/app
    env_file:
      - ./OpenQ-Bounty-Actions-Autotask/.env
  openq-bot:
    container_name: openq-bot
    depends_on:
      - openq-bounty-actions-autotask
      - openq-contracts
    build:
      dockerfile: Dockerfile
      context: ./OpenQ-Bot
    ports:
      - "3006:3006"
    volumes:
      - /app/node_modules
      - ./OpenQ-Bot:/app
    env_file:
      - ./OpenQ-Bot/.env
  openq-drm-frontend:
    container_name: openq-drm-frontend
    depends_on:
      - openq-json-rpc-node
      - openq-contracts
      - openq-api
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-DRM-Frontend
    ports:
      - "3000:3000"
    env_file:
      - ./OpenQ-Contracts/.env
      - ./OpenQ-DRM-Frontend/.env
      - ./OpenQ-Contracts/.env.contracts
      - ./OpenQ-Contracts/.env.superfluid.contracts
    volumes:
      - /app/node_modules
      - /app/.next
      - ./OpenQ-DRM-Frontend:/app
      - ./OpenQ-Contracts/artifacts:/app/artifacts
  github-oauth-server:
    container_name: github-oauth-server
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Github-OAuth-Server
    env_file:
      - ./OpenQ-Github-OAuth-Server/.env
    ports:
      - "3001:3001"
    volumes:
      - /app/node_modules
      - ./OpenQ-Github-OAuth-Server:/app
  redis:
    container_name: redis
    image: redis:7.0.7-alpine
    ports:
      - "6379:6379"
  openq-token-price-cronjob:
    container_name: openq-token-price-cronjob
    depends_on:
      - openq-api
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-Token-Price-Cron-Job
    env_file:
      - ./OpenQ-Token-Price-Cron-Job/.env
    volumes:
      - /app/node_modules
      - ./OpenQ-Token-Price-Cron-Job:/app
  openq-api:
    container_name: openq-api
    depends_on:
      - openq_subgraph_deployer
      - openq-json-rpc-node
      - openq-contracts
      - openq-coinapi
      - graph-node
    build:
      dockerfile: Dockerfile.dev
      context: ./OpenQ-API
    env_file:
      - ./OpenQ-API/.env
    ports:
      - "4000:4000"
    volumes:
      - /app/node_modules
      - ./OpenQ-API:/app
  mongo:
    container_name: mongo
    image: openq/mongo-local-replica-set:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_REPLICA_HOST: mongo
      MONGO_REPLICA_PORT: 27018
    ports:
      - "27018:27018"
  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
      - openq-api
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27018
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
      - ME_CONFIG_BASICAUTH_USERNAME=root
      - ME_CONFIG_BASICAUTH_PASSWORD=root
    ports:
      - "8888:8081"
    restart: unless-stopped
  # openq_superfluid_deployer:
  #   container_name: openq_superfluid_deployer
  #   depends_on:
  #     - openq-json-rpc-node
  #     - openq-contracts
  #     - graph-node
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./Superfluid-Subgraph
  #   volumes:
  #     - /app/subgraph/node_modules
